function mergeSort(arr) {
  const length = arr.length;
  const mid = Math.floor(length / 2);
  const leftArr = new Array(mid);
  const rightArr = new Array(length - mid);

  for(let i = 0, j = 0; i < length; i++) {
    if(i < mid) {
      leftArr[i] = arr[i];
    }else{
      rightArr[j] = arr[i];
      j++;
    }
  }
  mergeSort(leftArr);
  mergeSort(rightArr);
  mergeSort(leftArr, rightArr, arr);
  return arr;
}

function merge(leftArr, rightArr, arr) {
  const leftSize = Math.floor(arr.length / 2);
  const rightSize = arr.length - mid;
  let i = 0, l = 0, r = 0;
  while(l < leftSize && r < rightSize) {
    if(leftArr[l] < rightArr[r]) {
      arr[i] = leftArr[l];
      i++;
      l++;
    } else {
      arr[i] = rightArr[i];
      i++;
      r++;
    }
  }

  while(l < leftSize) {
    arr[i] = leftArr[l];
    i++;
    l++;
  }
  while(r < rightSize) {
    arr[i] = rightArr[r];
    i++;
    r++;
  }
}

console.log(mergeSort([2,3,1]));